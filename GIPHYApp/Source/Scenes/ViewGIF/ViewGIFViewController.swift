//
//  ViewGIFViewController.swift
//  GIPHYApp
//
//  Created by Daniel Ilchishyn on 11/2/17.
//  Copyright (c) 2017 KRUBERLICK. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import FLAnimatedImage

protocol ViewGIFDisplayLogic: class {
    func displaySomething(viewModel: ViewGIF.Something.ViewModel)
    func displayGIF(viewModel: ViewGIF.DisplayGIF.ViewModel)
}

class ViewGIFViewController: ContentViewController, ViewGIFDisplayLogic {
    var interactor: ViewGIFBusinessLogic?
    var router: (NSObjectProtocol & ViewGIFRoutingLogic & ViewGIFDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ViewGIFInteractor()
        let presenter = ViewGIFPresenter()
        let router = ViewGIFRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        animatedImageView.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(ViewGIFViewController.handleAnimatedImageTap)))
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        displayGIF(viewModel: router!.dataStore!.gif)
    }
    
    // MARK: Subviews
    
    //@IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var animatedImageView: FLAnimatedImageView!
    
    @objc private func handleAnimatedImageTap() {
        dismiss(animated: true, completion: nil)
    }
    
    func doSomething() {
        let request = ViewGIF.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: ViewGIF.Something.ViewModel) {
        //nameTextField.text = viewModel.name
    }
    
    func displayGIF(viewModel: ViewGIF.DisplayGIF.ViewModel) {
        guard let gif = viewModel.gif else {
            return
        }
        if let localGIFData = gif.localGIFData {
            animatedImageView.animatedImage = FLAnimatedImage(animatedGIFData: localGIFData)
        }
        else {
            DispatchQueue(label: "com.kruberlick.GIPHYApp.GIFDownloadQueue", qos: .utility).async {
                do {
                    let gifData = try Data(contentsOf: gif.url!)
                    let animatedImage = FLAnimatedImage(animatedGIFData: gifData)
                    DispatchQueue.main.async {
                        self.animatedImageView.animatedImage = animatedImage
                    }
                } catch let error {
                    print("Error reading gif data from url \(gif.url!), error: \(error)")
                }
            }
        }
    }
}
